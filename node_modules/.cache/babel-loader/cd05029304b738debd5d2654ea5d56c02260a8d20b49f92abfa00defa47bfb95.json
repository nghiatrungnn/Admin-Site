{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import './FoodList.css'; // Import tệp CSS\n\n// function FoodList() {\n//     const [orders, setOrders] = useState([]);\n//     const [newOrder, setNewOrder] = useState({ foodItem: '', quantity: '', customerName: '', address: '', imageUrl: '' });\n//     const [error, setError] = useState('');\n//     const [loading, setLoading] = useState(false);\n\n//     useEffect(() => {\n//         setLoading(true);\n//         fetch('https://orderfoods1.onrender.com/api/orders')\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Lỗi mạng: ' + response.statusText);\n//                 }\n//                 return response.json();\n//             })\n//             .then(data => {\n//                 setOrders(data);\n//                 setLoading(false);\n//             })\n//             .catch(error => {\n//                 console.error('Error fetching data:', error);\n//                 setError('Có lỗi xảy ra khi tải danh sách đơn hàng.');\n//                 setLoading(false);\n//             });\n//     }, []);\n\n//     const handleDelete = (id) => {\n//         setOrders(orders.filter(order => order._id !== id));\n//     };\n\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setNewOrder({ ...newOrder, [name]: value });\n//     };\n\n//     const handleAddOrder = (e) => {\n//         e.preventDefault();\n//         if (newOrder.foodItem && newOrder.quantity && newOrder.customerName && newOrder.address && newOrder.imageUrl) {\n//             setLoading(true);\n//             fetch('https://orderfoods1.onrender.com/api/orders', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify(newOrder),\n//             })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Lỗi mạng: ' + response.statusText);\n//                 }\n//                 return response.json();\n//             })\n//             .then(data => {\n//                 setOrders([...orders, data]);\n//                 setNewOrder({ foodItem: '', quantity: '', customerName: '', address: '', imageUrl: '' });\n//                 setLoading(false);\n//             })\n//             .catch(error => {\n//                 console.error('Error adding order:', error);\n//                 setError('Có lỗi xảy ra khi thêm đơn hàng.');\n//                 setLoading(false);\n//             });\n//         } else {\n//             setError('Tất cả các trường đều là bắt buộc.');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Danh Sách Đơn Hàng</h2>\n//             {loading && <p>Đang tải dữ liệu...</p>}\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\n//             <table className=\"food-table\">\n//                 <thead>\n//                     <tr>\n//                         <th>Món Ăn</th>\n//                         <th>Số Lượng</th>\n//                         <th>Tên Khách Hàng</th>\n//                         <th>Địa Chỉ</th>\n//                         <th>Hình Ảnh</th>\n//                         <th>Hành Động</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {orders.map(order => (\n//                         <tr key={order._id}>\n//                             <td>{order.foodItem}</td>\n//                             <td>{order.quantity}</td>\n//                             <td>{order.customerName}</td>\n//                             <td>{order.address}</td>\n//                             <td>\n//                                 <img src={order.imageUrl} alt={order.foodItem} className=\"food-image\" />\n//                             </td>\n//                             <td>\n//                                 <button onClick={() => handleDelete(order._id)}>Xóa</button>\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//             <form onSubmit={handleAddOrder} className=\"food-form\">\n//                 <input\n//                     type=\"text\"\n//                     name=\"foodItem\"\n//                     placeholder=\"Tên Món\"\n//                     value={newOrder.foodItem}\n//                     onChange={handleInputChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"number\"\n//                     name=\"quantity\"\n//                     placeholder=\"Số Lượng\"\n//                     value={newOrder.quantity}\n//                     onChange={handleInputChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     name=\"customerName\"\n//                     placeholder=\"Tên Khách Hàng\"\n//                     value={newOrder.customerName}\n//                     onChange={handleInputChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     name=\"address\"\n//                     placeholder=\"Địa Chỉ\"\n//                     value={newOrder.address}\n//                     onChange={handleInputChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     name=\"imageUrl\"\n//                     placeholder=\"URL Hình Ảnh\"\n//                     value={newOrder.imageUrl}\n//                     onChange={handleInputChange}\n//                     required\n//                 />\n//                 <button type=\"submit\">Thêm Đơn Hàng</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default FoodList;","map":{"version":3,"names":[],"sources":["D:/LTĐ/web/src/components/FoodList.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './FoodList.css'; // Import tệp CSS\r\n\r\n// function FoodList() {\r\n//     const [orders, setOrders] = useState([]);\r\n//     const [newOrder, setNewOrder] = useState({ foodItem: '', quantity: '', customerName: '', address: '', imageUrl: '' });\r\n//     const [error, setError] = useState('');\r\n//     const [loading, setLoading] = useState(false);\r\n\r\n//     useEffect(() => {\r\n//         setLoading(true);\r\n//         fetch('https://orderfoods1.onrender.com/api/orders')\r\n//             .then(response => {\r\n//                 if (!response.ok) {\r\n//                     throw new Error('Lỗi mạng: ' + response.statusText);\r\n//                 }\r\n//                 return response.json();\r\n//             })\r\n//             .then(data => {\r\n//                 setOrders(data);\r\n//                 setLoading(false);\r\n//             })\r\n//             .catch(error => {\r\n//                 console.error('Error fetching data:', error);\r\n//                 setError('Có lỗi xảy ra khi tải danh sách đơn hàng.');\r\n//                 setLoading(false);\r\n//             });\r\n//     }, []);\r\n\r\n//     const handleDelete = (id) => {\r\n//         setOrders(orders.filter(order => order._id !== id));\r\n//     };\r\n\r\n//     const handleInputChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setNewOrder({ ...newOrder, [name]: value });\r\n//     };\r\n\r\n//     const handleAddOrder = (e) => {\r\n//         e.preventDefault();\r\n//         if (newOrder.foodItem && newOrder.quantity && newOrder.customerName && newOrder.address && newOrder.imageUrl) {\r\n//             setLoading(true);\r\n//             fetch('https://orderfoods1.onrender.com/api/orders', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify(newOrder),\r\n//             })\r\n//             .then(response => {\r\n//                 if (!response.ok) {\r\n//                     throw new Error('Lỗi mạng: ' + response.statusText);\r\n//                 }\r\n//                 return response.json();\r\n//             })\r\n//             .then(data => {\r\n//                 setOrders([...orders, data]);\r\n//                 setNewOrder({ foodItem: '', quantity: '', customerName: '', address: '', imageUrl: '' });\r\n//                 setLoading(false);\r\n//             })\r\n//             .catch(error => {\r\n//                 console.error('Error adding order:', error);\r\n//                 setError('Có lỗi xảy ra khi thêm đơn hàng.');\r\n//                 setLoading(false);\r\n//             });\r\n//         } else {\r\n//             setError('Tất cả các trường đều là bắt buộc.');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Danh Sách Đơn Hàng</h2>\r\n//             {loading && <p>Đang tải dữ liệu...</p>}\r\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//             <table className=\"food-table\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Món Ăn</th>\r\n//                         <th>Số Lượng</th>\r\n//                         <th>Tên Khách Hàng</th>\r\n//                         <th>Địa Chỉ</th>\r\n//                         <th>Hình Ảnh</th>\r\n//                         <th>Hành Động</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {orders.map(order => (\r\n//                         <tr key={order._id}>\r\n//                             <td>{order.foodItem}</td>\r\n//                             <td>{order.quantity}</td>\r\n//                             <td>{order.customerName}</td>\r\n//                             <td>{order.address}</td>\r\n//                             <td>\r\n//                                 <img src={order.imageUrl} alt={order.foodItem} className=\"food-image\" />\r\n//                             </td>\r\n//                             <td>\r\n//                                 <button onClick={() => handleDelete(order._id)}>Xóa</button>\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//             <form onSubmit={handleAddOrder} className=\"food-form\">\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     name=\"foodItem\"\r\n//                     placeholder=\"Tên Món\"\r\n//                     value={newOrder.foodItem}\r\n//                     onChange={handleInputChange}\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"number\"\r\n//                     name=\"quantity\"\r\n//                     placeholder=\"Số Lượng\"\r\n//                     value={newOrder.quantity}\r\n//                     onChange={handleInputChange}\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     name=\"customerName\"\r\n//                     placeholder=\"Tên Khách Hàng\"\r\n//                     value={newOrder.customerName}\r\n//                     onChange={handleInputChange}\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     name=\"address\"\r\n//                     placeholder=\"Địa Chỉ\"\r\n//                     value={newOrder.address}\r\n//                     onChange={handleInputChange}\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     name=\"imageUrl\"\r\n//                     placeholder=\"URL Hình Ảnh\"\r\n//                     value={newOrder.imageUrl}\r\n//                     onChange={handleInputChange}\r\n//                     required\r\n//                 />\r\n//                 <button type=\"submit\">Thêm Đơn Hàng</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default FoodList;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}